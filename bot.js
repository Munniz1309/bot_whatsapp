const venom = require('venom-bot');
const axios = require('axios');

venom.create({
    session: 'chatgpt_bottttyy',
    multidevice: true
}).then((client) => start(client))
.catch((error) => console.error(error));

const headers = {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer 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' // Substitua SEU_TOKEN_OPENAI pelo seu token de API do OpenAI
                }

const start = (client) => {
    client.onMessage(async (message) => {
        axios.post('https://api.openai.com/v1/completions', {
            model: 'gpt-3.5-turbo', 
            prompt: pergunta})       
        try {
            await client.sendText(message.from, 'Ol√°! üåü Bem-vindo ao nosso Bot de Sa√∫de, somos uma Health Tech comprometida em auxili√°-lo a alcan√ßar seus objetivos de sa√∫de e bem-estar, com um foco especial no tratamento e redu√ß√£o da obesidade. Estamos aqui para acompanh√°-lo em cada etapa do processo, oferecendo apoio personalizado e informa√ß√µes embasadas.');

            await client.sendText(message.from, 'Para come√ßarmos, poderia gentilmente fornecer seu nome completo: ');
            const nomeCompletoResponse = client.waitForReply(message.from);
            const nomeCompleto = nomeCompletoResponse.body;

            await client.sendText(message.from, 'Pode me informar agora seu n√∫mero de telefone para contato‚òéÔ∏è: ');
            const telefoneContatoResponse = client.waitForReply(message.from);
            const telefoneContato = telefoneContatoResponse.body;

            let continuar = true;
            while (continuar) {
                await client.sendText(message.from, 'Escolha uma das op√ß√µes a seguir para darmos prosseguimento ao seu atendimento:\n1-) Informa√ß√µes sobre hor√°rio de funcionamento.\n2-) Agendamento de consultas.\n3-) Perguntas frequentes.\n4-) Sair');

                const respostaOpcao = await client.waitForReply(message.from);
                const opcao = respostaOpcao.body.toLowerCase();

                if (opcao === '1') {
                    await client.sendText(message.from, 'üïó Hor√°rio de Funcionamento: Segunda a S√°bado, das 8h √†s 17h.üì± Atendimento ao Cliente: Estamos dispon√≠veis 24 horas por dia, 7 dias por semana, atrav√©s do nosso WhatsApp oficial. Entre em contato a qualquer momento para obter suporte, informa√ß√µes ou tirar d√∫vidas. Estamos aqui para ajudar!');
                } else if (opcao === '2') {
                    await client.sendText(message.from, 'üìÖ Agendamento de Consultas\nOl√°! Voc√™ pode agendar suas consultas facilmente atrav√©s do nosso sistema online. Basta acessar o link abaixo e seguir as instru√ß√µes para selecionar a data e o hor√°rio que melhor se adequam √† sua agenda.\nhttps://calendly.com/vitor13muniz09/agenda_health_tech\nCaso tenha alguma d√∫vida ou precise de assist√™ncia, n√£o hesite em entrar em contato conosco. Estamos aqui para ajudar!');
                } else if (opcao === '3') {
                    await client.sendText(message.from, 'Exemplos de d√∫vidas comuns sobre obesidade:\n O que √© obesidade e como ela √© diagnosticada?\n Quais s√£o as causas da obesidade?\n Quais s√£o os riscos para a sa√∫de associados √† obesidade?\n Como a obesidade pode ser tratada?\n Quais s√£o as op√ß√µes de tratamento para perda de peso?\n Como o exerc√≠cio f√≠sico pode ajudar no controle da obesidade?\n Alguma outra d√∫vida espec√≠fica que voc√™ gostaria de abordar?');
                    
                    const perguntaResponse = await client.waitForReply(message.from);
                    const pergunta = perguntaResponse.body;
                
                    // Chamar a API do OpenAI para gerar uma resposta
                    const resposta = await gerarRespostaGPT(pergunta);
                
                    // Enviar a resposta gerada pelo ChatGPT para o usu√°rio
                    await client.sendText(message.from, resposta);
                } else if (opcao === '4') {
                    await client.sendText(message.from, 'Obrigado por conversar conosco! Tenha um √≥timo dia/tarde/noite! üëã');
                    continuar = false;
                } else {
                    await client.sendText(message.from, '‚ö†Ô∏è Op√ß√£o Inexistente\nPedimos desculpas, parece que voc√™ selecionou uma op√ß√£o que n√£o est√° dispon√≠vel no momento. Por favor, verifique novamente suas escolhas ou entre em contato conosco para obter assist√™ncia adicional. Agradecemos sua compreens√£o!');
                }
            }
        
            await client.sendText(message.from, 'Por favor, reserve alguns minutos do seu tempo para nos fornecer suas opini√µes e coment√°rios sobre nosso atendimento aqui: ');
            const feedback = client.waitForReply(message.from);
            const feedback_cliente = feedbackResponse.body;
    
        } catch (error) {
            console.error('Erro:', error);
        }
    });
};

// Fun√ß√£o para gerar resposta do GPT
async function gerarRespostaGPT(pergunta) {
    try {
        const resposta = await axios.post('https://api.openai.com/v1/completions', {
            model: 'gpt-3.5-turbo',
            prompt: pergunta,
            headers: headers
        });
        
        return resposta.data.choices[0].text.trim();
    } catch (error) {
        console.error('Erro ao gerar resposta do GPT:', error);
        return 'Desculpe, n√£o consegui gerar uma resposta no momento. Por favor, tente novamente mais tarde.';
    }
}